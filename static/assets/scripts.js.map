{"version":3,"sources":["src/assets/scripts.ts","src/assets/stripe-init/stripe_payment_intents_support.ts","src/assets/test/test.ts"],"names":[],"mappings":"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","file":"scripts.js","sourcesContent":["/**\n * @desc Main js entry point module (scripts)\n * @module src/assets/scripts.ts\n * @changed 2024.04.04, 16:06\n */\n\n/* NOTE: These modules are unused. Used only\n * `src/assets/stripe-init/stripe_payment_intents_support.ts`, via requirejs,\n * without exposing to global scope.\n *\n * import { billing_event_stripe_payment_proceed } from './stripe-init/billing_event_stripe_payment_proceed';\n * import { billing_membership_stripe_payment_proceed } from './stripe-init/billing_membership_stripe_payment_proceed';\n *\n * // Expose functions to global scope...\n * window.billing_event_stripe_payment_proceed = billing_event_stripe_payment_proceed;\n * window.billing_membership_stripe_payment_proceed = billing_membership_stripe_payment_proceed;\n *\n * console.log('[scripts] Main client code entry point', {\n *   billing_event_stripe_payment_proceed,\n *   billing_membership_stripe_payment_proceed,\n * });\n */\n","/**\n * @module stripe_payment_intents_support.ts\n * @changed 2024.04.04, 00:21\n */\n\nimport type {\n  Stripe,\n  StripeElements,\n  StripeElementsOptionsClientSecret,\n  StripeError,\n  StripePaymentElement,\n} from '@stripe/stripe-js/dist/stripe-js';\n\n/** Form action */\nfunction submitStripeForm(\n  stripe: Stripe,\n  params: TCreateCheckoutSessionParams,\n  elements: StripeElements,\n  event: SubmitEvent,\n) {\n  const { success_url } = params;\n\n  event.preventDefault();\n\n  // @see https://docs.stripe.com/payments/accept-a-payment?platform=web&ui=elements#web-submit-payment\n  // const result = await\n  stripe\n    .confirmPayment({\n      elements,\n      confirmParams: {\n        return_url: success_url,\n      },\n    })\n    .then((result) => {\n      const error: StripeError = result.error;\n\n      if (error) {\n        // debugger;\n        console.error(\n          '[stripe_payment_intents_support:startStripeElementsForm:submitStripeForm] error',\n          {\n            error,\n            event,\n            params,\n            stripe,\n          },\n        );\n\n        // Show error\n        const messageContainer = document.querySelector('#error-message');\n        if (messageContainer) {\n          messageContainer.textContent = error.message || '';\n        }\n      } else {\n        // Success: redirect to success message\n        console.log(\n          '[stripe_payment_intents_support:startStripeElementsForm:submitStripeForm] success',\n          {\n            success_url,\n            event,\n            params,\n            stripe,\n          },\n        );\n        debugger;\n        window.location.href = success_url;\n      }\n    })\n    .catch((error) => {\n      console.error(\n        '[stripe_payment_intents_support:startStripeElementsForm:submitStripeForm] error',\n        {\n          error,\n          event,\n          params,\n          stripe,\n        },\n      );\n    });\n}\n\n/** Start stripe payment form */\nexport function startStripeElementsForm(params: TCreateCheckoutSessionParams) {\n  const {\n    STRIPE_PUBLISHABLE_KEY,\n    // success_url,\n    client_secret,\n  } = params;\n\n  // Initialize Stripe.js\n  const stripe: Stripe = window.Stripe(STRIPE_PUBLISHABLE_KEY);\n\n  // @see https://docs.stripe.com/js/elements_object/create_payment_element#payment_element_create-options\n  const options: StripeElementsOptionsClientSecret = {\n    clientSecret: client_secret,\n    // TODO: Customize forms (use bootstrap styles)...\n    // appearance: {},\n  };\n\n  // Set up Stripe.js and Elements to use in checkout form, passing the client secret obtained in a previous step\n  const elements: StripeElements = stripe.elements(options);\n\n  // Create and mount the Payment Element\n  // @see https://docs.stripe.com/js/elements_object/create_payment_element\n  const paymentElement: StripePaymentElement = elements.create('payment');\n  paymentElement.mount('#payment-element');\n\n  const form = document.getElementById('payment-form');\n\n  if (!form) {\n    const errorText = 'Form node could not be found!';\n    const error = new Error(errorText);\n    console.log('[stripe_payment_intents_support:startStripeElementsForm] error', errorText, {\n      error,\n      params,\n      stripe,\n      options,\n      elements,\n      paymentElement,\n      form,\n    });\n    debugger;\n    return;\n  }\n\n  form.addEventListener('submit', submitStripeForm.bind(null, stripe, params, elements));\n}\n","/**\n * @module test.ts\n * @changed 2024.04.04, 16:19\n */\n\n// console.log('Test', window);\n"]}